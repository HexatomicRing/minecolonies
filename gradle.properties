org.gradle.jvmargs=-Xmx3G
org.gradle.daemon=true
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.configuration-cache=false
#TODO: config-cache requires update of language merging task in OPC

modId=minecolonies
modGroup=com.ldtteam
modVersion=0.0.11

javaVersion=21
useJavaToolChains=true
fml_range=[4,)

#The currently running forge.
forgeVersion=21.1.9
#The minimal needed forge, as marked in metadata and curseforge.
forgeMinVersion=21.1.0

#The version for forge (dependency)
exactMinecraftVersion=1.21.1
#The main version on curseforge
minecraftVersion=1.21.1
#Comma seperated list of mc versions, which are marked as compatible on curseforge
additionalMinecraftVersions=1.21
minecraft_range=[1.21, 1.22)

dataGeneratorsVersion=1.20.4-0.1.57-ALPHA
blockUI_version=1.0.192-1.21.1-snapshot
structurize_version=1.0.752-1.21.1-snapshot
domumOrnamentumVersion=1.0.204-1.21.1-snapshot
multiPistonVersion=1.2.51-1.21.1-snapshot

# jei versions: https://github.com/mezz/JustEnoughItems#1211
jei_mcversion=1.21.1
jei_version=19.19.6.235
jmapApiVersion=2.0.0-1.21-SNAPSHOT
jmapVersion=1.21-6.0.0-beta.19
tinkersConstructVersion=0
mantleVersion=0
# some mods include the MC version as part of their "real" version number, others
# store them separately (even if they look like they're included in the filename).
# it's important to get them the right way around for mods.toml to work properly.

# Journeymap doesn't have a maven (other than cursemaven); so if you want to use it in dev
# then drop the regular jar into the "libs" dir and set this to true (editing version if needed)
runWithJourneymap=false

githubUrl=https://github.com/ldtteam/Minecolonies
gitUrl=https://github.com/ldtteam/Minecolonies.git
gitConnectUrl=https://github.com/ldtteam/Minecolonies.git
projectUrl=https://www.curseforge.com/minecraft/mc-mods/minecolonies

curseId=245506
usesCurse=true
requiredCurseDependencies=structurize;domum-ornamentum;blockui;multi-piston;towntalk

usesCrowdin=false
crowdinId=minecolonies

usesDatagen=true
useDefaultTestSystem=false
runtimeSourceSets=main
librarySourceSets=main;datagen;
projectHasApi=false

extendDefaultSourceSetConfiguration=true
mainExcludedResources=assets/minecolonies/lang/manual_en_us.json;assets/minecolonies/lang/default.json;assets/minecolonies/lang/quests.json

usesMergableTranslations=true
translationMergeSources[0]=src/main/resources/assets/minecolonies/lang/manual_en_us.json
translationMergeSources[1]=src/datagen/generated/minecolonies/assets/minecolonies/lang/default.json
translationMergeSources[2]=src/datagen/generated/minecolonies/assets/minecolonies/lang/quests.json
translationMergeDestination[0]=src/main/resources/assets/minecolonies/lang/entries.json
translationMergeDestination[1]=src/main/resources/assets/minecolonies/lang/en_us.json

usesSonarQube=true

usesCrowdInTranslationManagement=true
crowdInDownloadDirectory=src/main/resources/assets/minecolonies/lang
usesCrowdInBuildingWithFilteredBranches=true
usesCrowdInUploadWithFilteredBranches=true

additionalModsInDataGen=structurize;domum_ornamentum

# Sets default memory used for gradle commands. Can be overridden by user or command line properties.
org.gradle.debug=false

#read more on this at https://github.com/neoforged/NeoGradle/blob/NG_7.0/README.md#apply-parchment-mappings
# you can also find the latest versions at: https://parchmentmc.org/docs/getting-started
neogradle.subsystems.parchment.minecraftVersion=1.21
neogradle.subsystems.parchment.mappingsVersion=2024.07.28
# Environment Properties
# You can find the latest versions here: https://projects.neoforged.net/neoforged/neoforge
# The Minecraft version must agree with the Neo version to get a valid artifact
minecraft_version=1.21
# The Minecraft version range can use any release version of Minecraft as bounds.
# Snapshots, pre-releases, and release candidates are not guaranteed to sort properly
# as they do not follow standard versioning conventions.
minecraft_version_range=[1.21,)
# The Neo version must agree with the Minecraft version to get a valid artifact
neo_version=21.1.9
# The Neo version range can use any version of Neo as bounds
neo_version_range=[21.1.9-beta,)
# The loader version range can only use the major version of FML as bounds
loader_version_range=[4,)

## Mod Properties

# The unique mod identifier for the mod. Must be lowercase in English locale. Must fit the regex [a-z][a-z0-9_]{1,63}
# Must match the String constant located in the main mod class annotated with @Mod.
mod_id=minecolonies
# The human-readable display name for the mod.
mod_name=MineColonies
# The license of the mod. Review your options at https://choosealicense.com/. All Rights Reserved is the default.
mod_license=All Rights Reserved
# The mod version. See https://semver.org/
mod_version=1.0.0
# The group ID for the mod. It is only important when publishing as an artifact to a Maven repository.
# This should match the base package used for the mod sources.
# See https://maven.apache.org/guides/mini/guide-naming-conventions.html
mod_group_id=com.minecolonies
# The authors of the mod. This is a simple text string that is used for display purposes in the mod list.
mod_authors=LDT Team
# The description of the mod. This is a simple multiline text string that is used for display purposes in the mod list.
mod_description=MineColonies is a colony simulator within Minecraft! There are numerous types of workers, and each worker has its own type of hut, letting you build a busy and vibrant village/town/city/colony. There is no coded limit to the number of NPC's at your disposal, so you can create a small, efficient village dedicated to a particular type of worker or a sprawling metropolis with hundreds of workers. It's entirely up to you!

